{"ast":null,"code":"var _jsxFileName = \"/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/settings/General.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport firebase from \"../../config/fire-conf\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport * as Icon from \"react-feather\";\nimport Popper from \"@material-ui/core/Popper\";\nconst useStyles = makeStyles(theme => ({}));\n\nfunction GeneralSettings(props) {\n  const router = useRouter();\n  const classes = useStyles();\n  const {\n    0: selectedWallet,\n    1: setselectedWallet\n  } = useState(0);\n  const {\n    0: anchorElWalletName,\n    1: setAnchorElWalletName\n  } = useState(null);\n  const {\n    0: anchorElWalletDetails,\n    1: setAnchorElWalletDetails\n  } = useState(null);\n  const {\n    0: walletNameField,\n    1: setwalletNameField\n  } = useState(\"\");\n  const {\n    0: walletDetailsField,\n    1: setwalletDetailsField\n  } = useState(\"\");\n\n  const handleClickWalletNamePopup = event => {\n    setAnchorElWalletName(anchorElWalletName ? null : event.currentTarget);\n  };\n\n  const handleClickWalletDetailsPopup = event => {\n    setAnchorElWalletDetails(anchorElWalletDetails ? null : event.currentTarget);\n  };\n\n  const updateWalletName = async () => {\n    if (walletNameField !== \"\") {\n      let modefiedObj = _objectSpread({}, props.walletsData);\n\n      modefiedObj[props.walletListArray[selectedWallet].id].title = walletNameField;\n      props.setwalletsData(modefiedObj); //updating data in firebase\n\n      let updates = {};\n      updates[\"userWallets/\" + props.userDataRedux.uid + \"/\" + props.walletListArray[selectedWallet].title + \"/title\"] = walletNameField;\n      firebase.database().ref().update(updates);\n      firebase.firestore().doc(\"userWallets/\" + props.walletListArray[selectedWallet].title + \"/Databases/\" + props.walletListArray[selectedWallet].title).update({\n        dbName: walletNameField\n      }).then(() => {\n        toast.success(\"App name updated Successfully\", {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      });\n    } else {\n      toast.error(\"Please provide wallet name!\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }\n\n    handleClickWalletNamePopup();\n  }; // const updateAppDetails = () => {\n  //   if (walletDetailsField !== \"\") {\n  //     let modefiedObj = [...props.walletListArray];\n  //     modefiedObj[selectedWallet].details = walletDetailsField;\n  //     props.setdbList(modefiedObj);\n  //     //updating data in firebase\n  //     firebase\n  //       .firestore()\n  //       .doc(\n  //         \"usersData/\" +\n  //           props.userDataRedux.uid +\n  //           \"/Databases/\" +\n  //           props.walletListArray[selectedWallet].dbId\n  //       )\n  //       .update({\n  //         details: walletDetailsField,\n  //       })\n  //       .then(() => {\n  //         toast.success(\"App details updated Successfully\", {\n  //           position: \"bottom-left\",\n  //           autoClose: 10000,\n  //           hideProgressBar: false,\n  //           closeOnClick: true,\n  //           pauseOnHover: true,\n  //           draggable: true,\n  //         });\n  //       });\n  //   } else {\n  //     toast.error(\"Please provide app details!\", {\n  //       position: \"bottom-left\",\n  //       autoClose: 10000,\n  //       hideProgressBar: false,\n  //       closeOnClick: true,\n  //       pauseOnHover: true,\n  //       draggable: true,\n  //     });\n  //   }\n  //   handleClickWalletDetailsPopup();\n  // };\n\n\n  const openDbNamePopup = Boolean(anchorElWalletName);\n  const idWalletNamePopup = openDbNamePopup ? \"db-name-popper\" : undefined;\n  const openDbDetailsPopup = Boolean(anchorElWalletDetails);\n  const idWalletDetailsPopup = openDbDetailsPopup ? \"db-details-popper\" : undefined;\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"blog-details-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\",\n    style: {\n      margin: \"0px auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"blog-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"article-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Your Wallets\"), props.walletListArray && props.walletListArray.length > 0 ? __jsx(\"div\", {\n    className: \"generalSet-con-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"generalSet-con1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, props.walletListArray.map((ele, index) => {\n    return __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      className: selectedWallet === index ? \"single-box2 bg-eb6b3d dbselecednav\" : \"single-box2 bg-eb6b3d \",\n      key: ele.id + \"nav\",\n      onClick: () => setselectedWallet(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      className: \"icon\",\n      style: {\n        cursor: \"pointer\",\n        marginRight: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, __jsx(Icon.Server, {\n      style: {\n        height: 18,\n        width: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 31\n      }\n    })), __jsx(\"div\", {\n      className: \"sett-gen-nav-nam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, __jsx(\"p\", {\n      className: \"nav-set-head\",\n      style: {\n        color: \"#0a0f12\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 31\n      }\n    }, ele.title), __jsx(\"p\", {\n      style: {\n        fontSize: 11,\n        position: \"relative\",\n        top: -4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 31\n      }\n    }, \"database\")));\n  })), __jsx(\"div\", {\n    className: \"generalSet-con2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 0\n    },\n    className: \"general-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, __jsx(\"h6\", {\n    style: {\n      marginTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"Wallet Name\", __jsx(IconButton, {\n    size: \"small\",\n    style: {\n      position: \"absolute\",\n      marginTop: -4,\n      marginLeft: 6\n    },\n    \"aria-describedby\": idWalletNamePopup,\n    onClick: e => {\n      setwalletNameField(props.walletListArray[selectedWallet] && props.walletListArray[selectedWallet].title ? props.walletListArray[selectedWallet].title : \"\");\n      handleClickWalletNamePopup(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 27\n    }\n  }, __jsx(EditIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, props.walletListArray[selectedWallet] && props.walletListArray[selectedWallet].title ? props.walletListArray[selectedWallet].title : \"-\"), __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, \"Mnemonic Phrase\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, props.walletListArray[selectedWallet] && props.walletListArray[selectedWallet].mnemonic ? props.walletListArray[selectedWallet].mnemonic : \"-\")))) : __jsx(\"div\", {\n    className: \"generalSet-con-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, \"You didn't have any apps yet \")))))), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  })), __jsx(Popper, {\n    id: idWalletNamePopup,\n    open: openDbNamePopup,\n    anchorEl: anchorElWalletName,\n    placement: \"bottom\",\n    disablePortal: false,\n    modifiers: {\n      flip: {\n        enabled: true\n      },\n      preventOverflow: {\n        enabled: true,\n        boundariesElement: \"scrollParent\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, __jsx(Paper, {\n    className: \"poper-dbname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    className: \"popHeadMain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, \"Update App Name\"), __jsx(\"div\", {\n    className: \"form-group\",\n    style: {\n      margin: \"20px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"DB Name\",\n    className: \"form-control\",\n    required: true,\n    \"data-error\": \"Please enter your DB Name\",\n    placeholder: \"DB Name\",\n    style: {\n      height: 40\n    },\n    value: walletNameField,\n    onChange: e => {\n      setwalletNameField(e.target.value);\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"normal-button\",\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    style: {\n      marginRight: 10\n    },\n    onClick: handleClickWalletNamePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), __jsx(\"button\", {\n    onClick: updateWalletName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, \"Update\"))))), __jsx(Popper, {\n    id: idWalletDetailsPopup,\n    open: openDbDetailsPopup,\n    anchorEl: anchorElWalletDetails,\n    placement: \"bottom\",\n    disablePortal: false,\n    modifiers: {\n      flip: {\n        enabled: true\n      },\n      preventOverflow: {\n        enabled: true,\n        boundariesElement: \"scrollParent\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, __jsx(Paper, {\n    className: \"poper-dbname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    className: \"popHeadMain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, \"Update App Details\"), __jsx(\"div\", {\n    className: \"form-group\",\n    style: {\n      margin: \"20px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }, __jsx(\"textarea\", {\n    name: \"details\",\n    className: \"form-control\",\n    id: \"details\",\n    cols: \"30\",\n    rows: \"5\",\n    required: true,\n    \"data-error\": \"Please provide DB details\",\n    placeholder: \"DB Details\",\n    value: walletDetailsField,\n    onChange: e => {\n      setwalletDetailsField(e.target.value);\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"normal-button\",\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    style: {\n      marginRight: 10\n    },\n    onClick: handleClickWalletDetailsPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, \"Update\"))))));\n}\n\nexport default GeneralSettings;","map":{"version":3,"sources":["/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/settings/General.js"],"names":["React","useState","useRouter","Paper","makeStyles","firebase","IconButton","EditIcon","ToastContainer","toast","Icon","Popper","useStyles","theme","GeneralSettings","props","router","classes","selectedWallet","setselectedWallet","anchorElWalletName","setAnchorElWalletName","anchorElWalletDetails","setAnchorElWalletDetails","walletNameField","setwalletNameField","walletDetailsField","setwalletDetailsField","handleClickWalletNamePopup","event","currentTarget","handleClickWalletDetailsPopup","updateWalletName","modefiedObj","walletsData","walletListArray","id","title","setwalletsData","updates","userDataRedux","uid","database","ref","update","firestore","doc","dbName","then","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","error","openDbNamePopup","Boolean","idWalletNamePopup","undefined","openDbDetailsPopup","idWalletDetailsPopup","margin","length","map","ele","index","display","alignItems","cursor","marginRight","height","width","color","fontSize","top","marginTop","marginLeft","e","mnemonic","flip","enabled","preventOverflow","boundariesElement","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport firebase from \"../../config/fire-conf\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport * as Icon from \"react-feather\";\nimport Popper from \"@material-ui/core/Popper\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction GeneralSettings(props) {\n  const router = useRouter();\n  const classes = useStyles();\n\n  const [selectedWallet, setselectedWallet] = useState(0);\n  const [anchorElWalletName, setAnchorElWalletName] = useState(null);\n  const [anchorElWalletDetails, setAnchorElWalletDetails] = useState(null);\n  const [walletNameField, setwalletNameField] = useState(\"\");\n  const [walletDetailsField, setwalletDetailsField] = useState(\"\");\n\n  const handleClickWalletNamePopup = (event) => {\n    setAnchorElWalletName(anchorElWalletName ? null : event.currentTarget);\n  };\n\n  const handleClickWalletDetailsPopup = (event) => {\n    setAnchorElWalletDetails(\n      anchorElWalletDetails ? null : event.currentTarget\n    );\n  };\n\n  const updateWalletName = async () => {\n    if (walletNameField !== \"\") {\n      let modefiedObj = { ...props.walletsData };\n      modefiedObj[\n        props.walletListArray[selectedWallet].id\n      ].title = walletNameField;\n      props.setwalletsData(modefiedObj);\n\n      //updating data in firebase\n      let updates = {};\n      updates[\n        \"userWallets/\" + props.userDataRedux.uid + \"/\" + props.walletListArray[selectedWallet].title + \"/title\"\n      ] = walletNameField;\n      firebase.database().ref().update(updates);\n\n      firebase\n        .firestore()\n        .doc(\n          \"userWallets/\" +\n            props.walletListArray[selectedWallet].title +\n            \"/Databases/\" +\n            props.walletListArray[selectedWallet].title\n        )\n        .update({\n          dbName: walletNameField,\n        })\n        .then(() => {\n          toast.success(\"App name updated Successfully\", {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n        });\n    } else {\n      toast.error(\"Please provide wallet name!\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    }\n    handleClickWalletNamePopup();\n  };\n\n  // const updateAppDetails = () => {\n  //   if (walletDetailsField !== \"\") {\n  //     let modefiedObj = [...props.walletListArray];\n  //     modefiedObj[selectedWallet].details = walletDetailsField;\n  //     props.setdbList(modefiedObj);\n  //     //updating data in firebase\n  //     firebase\n  //       .firestore()\n  //       .doc(\n  //         \"usersData/\" +\n  //           props.userDataRedux.uid +\n  //           \"/Databases/\" +\n  //           props.walletListArray[selectedWallet].dbId\n  //       )\n  //       .update({\n  //         details: walletDetailsField,\n  //       })\n  //       .then(() => {\n  //         toast.success(\"App details updated Successfully\", {\n  //           position: \"bottom-left\",\n  //           autoClose: 10000,\n  //           hideProgressBar: false,\n  //           closeOnClick: true,\n  //           pauseOnHover: true,\n  //           draggable: true,\n  //         });\n  //       });\n  //   } else {\n  //     toast.error(\"Please provide app details!\", {\n  //       position: \"bottom-left\",\n  //       autoClose: 10000,\n  //       hideProgressBar: false,\n  //       closeOnClick: true,\n  //       pauseOnHover: true,\n  //       draggable: true,\n  //     });\n  //   }\n  //   handleClickWalletDetailsPopup();\n  // };\n\n  const openDbNamePopup = Boolean(anchorElWalletName);\n  const idWalletNamePopup = openDbNamePopup ? \"db-name-popper\" : undefined;\n  const openDbDetailsPopup = Boolean(anchorElWalletDetails);\n  const idWalletDetailsPopup = openDbDetailsPopup\n    ? \"db-details-popper\"\n    : undefined;\n  return (\n    <>\n      <section className=\"blog-details-area\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12\" style={{ margin: \"0px auto\" }}>\n            <div className=\"blog-details\">\n              <div className=\"article-content\">\n                <h5>Your Wallets</h5>\n\n                {props.walletListArray && props.walletListArray.length > 0 ? (\n                  <div className=\"generalSet-con-main\">\n                    <div className=\"generalSet-con1\">\n                      {props.walletListArray.map((ele, index) => {\n                        return (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                            }}\n                            className={\n                              selectedWallet === index\n                                ? \"single-box2 bg-eb6b3d dbselecednav\"\n                                : \"single-box2 bg-eb6b3d \"\n                            }\n                            key={ele.id + \"nav\"}\n                            onClick={() => setselectedWallet(index)}\n                          >\n                            <div\n                              className=\"icon\"\n                              style={{ cursor: \"pointer\", marginRight: 12 }}\n                            >\n                              <Icon.Server style={{ height: 18, width: 18 }} />\n                            </div>\n                            <div className=\"sett-gen-nav-nam\">\n                              <p\n                                className=\"nav-set-head\"\n                                style={{ color: \"#0a0f12\" }}\n                              >\n                                {ele.title}\n                              </p>\n                              <p\n                                style={{\n                                  fontSize: 11,\n                                  position: \"relative\",\n                                  top: -4,\n                                }}\n                              >\n                                database\n                              </p>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                    <div className=\"generalSet-con2\">\n                      <div\n                        style={{ marginTop: 0 }}\n                        className=\"general-settings\"\n                      >\n                        <h6 style={{ marginTop: 0 }}>\n                          Wallet Name\n                          <IconButton\n                            size=\"small\"\n                            style={{\n                              position: \"absolute\",\n                              marginTop: -4,\n                              marginLeft: 6,\n                            }}\n                            aria-describedby={idWalletNamePopup}\n                            onClick={(e) => {\n                              setwalletNameField(\n                                props.walletListArray[selectedWallet] &&\n                                  props.walletListArray[selectedWallet].title\n                                  ? props.walletListArray[selectedWallet].title\n                                  : \"\"\n                              );\n                              handleClickWalletNamePopup(e);\n                            }}\n                          >\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                        </h6>\n                        <p>\n                          {props.walletListArray[selectedWallet] &&\n                          props.walletListArray[selectedWallet].title\n                            ? props.walletListArray[selectedWallet].title\n                            : \"-\"}\n                        </p>\n\n                        {/* <h6>\n                          Details\n                          <IconButton\n                            size=\"small\"\n                            style={{\n                              position: \"absolute\",\n                              marginTop: -4,\n                              marginLeft: 6,\n                            }}\n                            aria-describedby={idWalletDetailsPopup}\n                            onClick={(e) => {\n                              setwalletDetailsField(\n                                props.walletListArray[selectedWallet] &&\n                                  props.walletListArray[selectedWallet].details\n                                  ? props.walletListArray[selectedWallet].details\n                                  : \"\"\n                              );\n                              handleClickWalletDetailsPopup(e);\n                            }}\n                          >\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                        </h6>\n                        <p>\n                          {props.walletListArray[selectedWallet] &&\n                          props.walletListArray[selectedWallet].details\n                            ? props.walletListArray[selectedWallet].details\n                            : \"-\"}\n                        </p> */}\n\n                        <h6>Mnemonic Phrase</h6>\n                        <p>\n                          {props.walletListArray[selectedWallet] &&\n                          props.walletListArray[selectedWallet].mnemonic\n                            ? props.walletListArray[selectedWallet].mnemonic\n                            : \"-\"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"generalSet-con-main\">\n                    <p>You didn't have any apps yet </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <ToastContainer />\n      </section>\n      <Popper\n        id={idWalletNamePopup}\n        open={openDbNamePopup}\n        anchorEl={anchorElWalletName}\n        placement=\"bottom\"\n        disablePortal={false}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n        }}\n      >\n        <Paper className=\"poper-dbname\">\n          <h6 className=\"popHeadMain\">Update App Name</h6>\n          <div className=\"form-group\" style={{ margin: \"20px 0px\" }}>\n            <input\n              type=\"text\"\n              name=\"DB Name\"\n              className=\"form-control\"\n              required\n              data-error=\"Please enter your DB Name\"\n              placeholder=\"DB Name\"\n              style={{ height: 40 }}\n              value={walletNameField}\n              onChange={(e) => {\n                setwalletNameField(e.target.value);\n              }}\n              autoFocus\n            />\n          </div>\n          <div className=\"normal-button\" style={{ display: \"flex\" }}>\n            <div style={{ marginLeft: \"auto\" }}>\n              <button\n                style={{ marginRight: 10 }}\n                onClick={handleClickWalletNamePopup}\n              >\n                Cancel\n              </button>\n\n              <button onClick={updateWalletName}>Update</button>\n            </div>\n          </div>\n        </Paper>\n      </Popper>\n      <Popper\n        id={idWalletDetailsPopup}\n        open={openDbDetailsPopup}\n        anchorEl={anchorElWalletDetails}\n        placement=\"bottom\"\n        disablePortal={false}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n        }}\n      >\n        <Paper className=\"poper-dbname\">\n          <h6 className=\"popHeadMain\">Update App Details</h6>\n\n          <div className=\"form-group\" style={{ margin: \"20px 0px\" }}>\n            <textarea\n              name=\"details\"\n              className=\"form-control\"\n              id=\"details\"\n              cols=\"30\"\n              rows=\"5\"\n              required\n              data-error=\"Please provide DB details\"\n              placeholder=\"DB Details\"\n              value={walletDetailsField}\n              onChange={(e) => {\n                setwalletDetailsField(e.target.value);\n              }}\n              autoFocus\n            />\n          </div>\n          <div className=\"normal-button\" style={{ display: \"flex\" }}>\n            <div style={{ marginLeft: \"auto\" }}>\n              <button\n                style={{ marginRight: 10 }}\n                onClick={handleClickWalletDetailsPopup}\n              >\n                Cancel\n              </button>\n\n              <button\n              // onClick={updateAppDetails}\n              >\n                Update\n              </button>\n            </div>\n          </div>\n        </Paper>\n      </Popper>\n    </>\n  );\n}\n\nexport default GeneralSettings;\n"]},"metadata":{},"sourceType":"module"}
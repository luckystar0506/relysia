{"ast":null,"code":"var _jsxFileName = \"/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/dashboard/newWalletDialog.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useRef } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport firebase from \"../../config/fire-conf\";\nimport CustomLoader from \"../Layouts/CustomLoader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nconst Transition = /*#__PURE__*/React.forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }));\n});\nexport default function NewWalletDialog(props) {\n  const {\n    0: userNameField,\n    1: setuserNameField\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setloading\n  } = useState(false);\n  const {\n    0: walletName,\n    1: setwalletName\n  } = useState(\"\");\n  const {\n    0: walletPassword,\n    1: setwalletPassword\n  } = useState(\"\");\n\n  const handleClose = () => {\n    props.setdialogState(false);\n  };\n\n  const createNewDialog = () => {\n    setloading(true);\n    toast.info(\"Generating Wallet Keys..\", {\n      position: \"bottom-left\",\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n    setloading(false);\n    handleClose();\n    setwalletPassword(\"\");\n    setwalletName(\"\"); // if (userNameField === \"\") {\n    //   toast.error(\"Please provide a Username\", {\n    //     position: \"bottom-left\",\n    //     autoClose: 10000,\n    //     hideProgressBar: false,\n    //     closeOnClick: true,\n    //     pauseOnHover: true,\n    //     draggable: true,\n    //   });\n    //   setloading(false);\n    // } else {\n    //   var updateUser = firebase.auth().currentUser;\n    //   updateUser\n    //     .updateProfile({\n    //       displayName: userNameField,\n    //     })\n    //     .then(() => {\n    //   toast.success(\"Username updated Successfully\", {\n    //     position: \"bottom-left\",\n    //     autoClose: 10000,\n    //     hideProgressBar: false,\n    //     closeOnClick: true,\n    //     pauseOnHover: true,\n    //     draggable: true,\n    //   });\n    //       setloading(false);\n    //       handleClose();\n    //       setuserNameField(\"\");\n    //     })\n    //     .catch(function (error) {\n    //       toast.error(error.message, {\n    //         position: \"bottom-left\",\n    //         autoClose: 10000,\n    //         hideProgressBar: false,\n    //         closeOnClick: true,\n    //         pauseOnHover: true,\n    //         draggable: true,\n    //       });\n    //       setloading(false);\n    //     });\n    // }\n  };\n\n  return __jsx(Dialog, {\n    open: props.dialogState,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    fullWidth: true,\n    style: {\n      zIndex: 100\n    },\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    style: {\n      padding: \"18px 24px 5px 24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Create New Wallet\"), __jsx(\"form\", {\n    onSubmit: createNewDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Wallet Name\"), __jsx(\"input\", {\n    onChange: e => {\n      setwalletName(e.target.value);\n    },\n    value: walletName,\n    type: \"text\",\n    className: \"form-control\",\n    defaultValue: \"\",\n    placeholder: \"Enter your Wallet Name\",\n    required: true,\n    maxLength: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Wallet Password\"), __jsx(\"input\", {\n    onChange: e => {\n      setwalletPassword(e.target.value);\n    },\n    type: \"password\",\n    className: \"form-control\",\n    defaultValue: \"\",\n    placeholder: \"Enter your Wallet Password\",\n    value: walletPassword,\n    required: true,\n    minLength: 6,\n    maxLength: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }))), __jsx(DialogActions, {\n    style: {\n      marginTop: 10,\n      height: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, (() => {\n    if (loading) {\n      return __jsx(\"div\", {\n        style: {\n          width: 80\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, __jsx(CustomLoader, {\n        width: 25,\n        height: 25,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      }));\n    } else {\n      return __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, \"Update\");\n    }\n  })())), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/dashboard/newWalletDialog.js"],"names":["React","useState","useRef","Dialog","DialogActions","DialogContent","Slide","firebase","CustomLoader","ToastContainer","toast","Transition","forwardRef","props","ref","NewWalletDialog","userNameField","setuserNameField","loading","setloading","walletName","setwalletName","walletPassword","setwalletPassword","handleClose","setdialogState","createNewDialog","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","dialogState","zIndex","padding","e","target","value","marginTop","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport firebase from \"../../config/fire-conf\";\nimport CustomLoader from \"../Layouts/CustomLoader\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function NewWalletDialog(props) {\n  const [userNameField, setuserNameField] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [walletName, setwalletName] = useState(\"\");\n  const [walletPassword, setwalletPassword] = useState(\"\");\n\n  const handleClose = () => {\n    props.setdialogState(false);\n  };\n\n  const createNewDialog = () => {\n    setloading(true);\n    toast.info(\"Generating Wallet Keys..\", {\n      position: \"bottom-left\",\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n\n    setloading(false);\n    handleClose();\n    setwalletPassword(\"\");\n    setwalletName(\"\");\n\n    // if (userNameField === \"\") {\n    //   toast.error(\"Please provide a Username\", {\n    //     position: \"bottom-left\",\n    //     autoClose: 10000,\n    //     hideProgressBar: false,\n    //     closeOnClick: true,\n    //     pauseOnHover: true,\n    //     draggable: true,\n    //   });\n    //   setloading(false);\n    // } else {\n    //   var updateUser = firebase.auth().currentUser;\n    //   updateUser\n    //     .updateProfile({\n    //       displayName: userNameField,\n    //     })\n    //     .then(() => {\n    //   toast.success(\"Username updated Successfully\", {\n    //     position: \"bottom-left\",\n    //     autoClose: 10000,\n    //     hideProgressBar: false,\n    //     closeOnClick: true,\n    //     pauseOnHover: true,\n    //     draggable: true,\n    //   });\n    //       setloading(false);\n    //       handleClose();\n    //       setuserNameField(\"\");\n    //     })\n    //     .catch(function (error) {\n    //       toast.error(error.message, {\n    //         position: \"bottom-left\",\n    //         autoClose: 10000,\n    //         hideProgressBar: false,\n    //         closeOnClick: true,\n    //         pauseOnHover: true,\n    //         draggable: true,\n    //       });\n    //       setloading(false);\n    //     });\n    // }\n  };\n\n  return (\n    <Dialog\n      open={props.dialogState}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      fullWidth\n      style={{ zIndex: 100 }}\n      maxWidth=\"sm\"\n    >\n      <h5 style={{ padding: \"18px 24px 5px 24px\" }}>Create New Wallet</h5>\n      <form onSubmit={createNewDialog}>\n        <DialogContent>\n          <div className=\"form-group\">\n            <label>Wallet Name</label>\n            <input\n              onChange={(e) => {\n                setwalletName(e.target.value);\n              }}\n              value={walletName}\n              type=\"text\"\n              className=\"form-control\"\n              defaultValue=\"\"\n              placeholder=\"Enter your Wallet Name\"\n              required\n              maxLength={80}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Wallet Password</label>\n            <input\n              onChange={(e) => {\n                setwalletPassword(e.target.value);\n              }}\n              type=\"password\"\n              className=\"form-control\"\n              defaultValue=\"\"\n              placeholder=\"Enter your Wallet Password\"\n              value={walletPassword}\n              required\n              minLength={6}\n              maxLength={200}\n            />\n          </div>\n        </DialogContent>\n        <DialogActions style={{ marginTop: 10, height: 50 }}>\n          {(() => {\n            if (loading) {\n              return (\n                <div style={{ width: 80 }}>\n                  <CustomLoader width={25} height={25} />\n                </div>\n              );\n            } else {\n              return (\n                <button type=\"submit\" className=\"btn btn-primary btn-small\">\n                  Update\n                </button>\n              );\n            }\n          })()}\n        </DialogActions>\n      </form>\n      <ToastContainer />\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
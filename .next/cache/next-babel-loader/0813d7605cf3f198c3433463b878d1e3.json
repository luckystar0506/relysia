{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/profile/DynamicDialog.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport firebase from \"../../config/fire-conf\";\nimport CustomLoader from \"../Layouts/CustomLoader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport { updateUserDataAction } from \"../../store/actions/actiosMain\";\nimport UpdateImagePortrait from \"./UpdateImagePortrait\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport WithdrawComponent from \"./WithdrawComponent\";\nvar Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }));\n});\n_c2 = Transition;\nexport default function DynamicDialog(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      userNameField = _useState[0],\n      setuserNameField = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      emailField = _useState3[0],\n      setemailField = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      ucurrentPasswordField = _useState4[0],\n      setucurrentPasswordField = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      unewPasswordField = _useState5[0],\n      setunewPasswordField = _useState5[1];\n\n  var _useState6 = useState([]),\n      imageFile = _useState6[0],\n      setimageFile = _useState6[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var handleClose = function handleClose() {\n    props.setdialogState(false);\n  };\n\n  var validateEmail = function validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  var updateUsername = function updateUsername() {\n    setloading(true);\n\n    if (userNameField === \"\") {\n      toast.error(\"Please provide a Username\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      setloading(false);\n    } else {\n      var updateUser = firebase.auth().currentUser;\n      updateUser.updateProfile({\n        displayName: userNameField\n      }).then(function () {\n        toast.success(\"Username updated Successfully\", {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setloading(false);\n        handleClose();\n        setuserNameField(\"\");\n      })[\"catch\"](function (error) {\n        toast.error(error.message, {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setloading(false);\n      });\n    }\n  };\n\n  var updateUserEmail = function updateUserEmail() {\n    setloading(true);\n    var pass = true;\n\n    if (!validateEmail(emailField)) {\n      toast.error(\"Please provide a valid Email Address\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      pass = false;\n    }\n\n    if (ucurrentPasswordField === \"\") {\n      toast.error(\"Please provide your current Password\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      pass = false;\n    }\n\n    if (!pass) {\n      setloading(false);\n    } else {\n      //signning the user\n      firebase.auth().signInWithEmailAndPassword(props.userEmail, ucurrentPasswordField).then(function () {\n        //updating email\n        var user = firebase.auth().currentUser;\n        return user.updateEmail(emailField);\n      }).then(function () {\n        // Update successful.\n        toast.success(\"User Email Updated Successfully\", {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setloading(false);\n        handleClose();\n        setemailField(\"\");\n        setucurrentPasswordField(\"\");\n      })[\"catch\"](function (error) {\n        toast.error(error.message, {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setloading(false);\n      });\n    }\n  };\n\n  var updateUserPassword = function updateUserPassword() {\n    setloading(true);\n    var pass = true;\n\n    if (unewPasswordField === \"\") {\n      toast.error(\"Please provide your new Password\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      pass = false;\n    }\n\n    if (ucurrentPasswordField === \"\") {\n      toast.error(\"Please provide your current Password\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      pass = false;\n    }\n\n    if (!pass) {\n      setloading(false);\n    } else {\n      //signning the user\n      firebase.auth().signInWithEmailAndPassword(props.userEmail, ucurrentPasswordField).then(function () {\n        //updating email\n        var user = firebase.auth().currentUser;\n        return user.updatePassword(unewPasswordField);\n      }).then(function () {\n        // Update successful.\n        toast.success(\"User Password Updated Successfully\", {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setloading(false);\n        handleClose();\n        setunewPasswordField(\"\");\n        setucurrentPasswordField(\"\");\n      })[\"catch\"](function (error) {\n        toast.error(error.message, {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setloading(false);\n      });\n    }\n  };\n\n  var updateUserAccount = function updateUserAccount() {\n    setloading(true);\n    var pass = true;\n\n    if (ucurrentPasswordField === \"\") {\n      toast.error(\"Please provide your current Password\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n      pass = false;\n    }\n\n    if (!pass) {\n      setloading(false);\n    } else {\n      //signning the user\n      firebase.auth().signInWithEmailAndPassword(props.userEmail, ucurrentPasswordField).then(function () {\n        //updating email\n        var user = firebase.auth().currentUser;\n        return user[\"delete\"]();\n      }).then(function () {\n        // Update successful.\n        toast.success(\"User Account Deleted Successfully\", {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setloading(false);\n        handleClose();\n        setucurrentPasswordField(\"\");\n        dispatch(updateUserDataAction(null));\n        router.push(\"/\");\n      })[\"catch\"](function (error) {\n        toast.error(error.message, {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setloading(false);\n      });\n    }\n  };\n\n  var updateUserPhoto = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var pass, storage, modefiedURL, currentuser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setloading(true);\n              pass = true;\n\n              if (!imageFile[0]) {\n                _context.next = 12;\n                break;\n              }\n\n              //pushing image to DB\n              storage = firebase.storage();\n              modefiedURL = \"https://firebasestorage.googleapis.com/v0/b/vaionexdev.appspot.com/o/profile_images%2F\".concat(props.uid, \"?alt=media\");\n              _context.next = 7;\n              return storage.ref().child(\"profile_images/\".concat(props.uid)).put(imageFile[0].originFileObj);\n\n            case 7:\n              props.setprofileImg(modefiedURL);\n              currentuser = firebase.auth().currentUser;\n              currentuser.updateProfile({\n                photoURL: modefiedURL\n              }).then(function () {\n                setloading(false);\n                handleClose();\n                toast.success(\"Image Uploaded Succesfully\", {\n                  position: \"bottom-left\",\n                  autoClose: 10000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true\n                });\n              })[\"catch\"](function (error) {\n                setloading(false);\n                toast.error(\"Error Occured!\", {\n                  position: \"bottom-left\",\n                  autoClose: 10000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true\n                });\n              });\n              _context.next = 14;\n              break;\n\n            case 12:\n              setloading(false);\n              toast.error(\"Please provide Profile Image\", {\n                position: \"bottom-left\",\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateUserPhoto() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Dialog, {\n    open: props.dialogState,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    fullWidth: true,\n    style: {\n      zIndex: 100\n    },\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    style: {\n      padding: \"18px 24px 5px 24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, function () {\n    if (props.dialogType === \"export\") {\n      return \"Backup Your Wallet\";\n    } else if (props.dialogType === \"update-username\") {\n      return \"Update UserName\";\n    } else if (props.dialogType === \"update-email\") {\n      return \"Update Email\";\n    } else if (props.dialogType === \"update-password\") {\n      return \"Update Password\";\n    } else if (props.dialogType === \"update-account\") {\n      return \"Delete Account\";\n    } else if (props.dialogType === \"update-image\") {\n      return \"Add an account photo\";\n    } else if (props.dialogType === \"withdraw\") {\n      return \"Withdraw Amount\";\n    }\n  }()), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }\n  }, function () {\n    if (props.dialogType === \"export\") {\n      return __jsx(React.Fragment, null, __jsx(\"p\", {\n        style: {\n          marginBottom: \"0.2rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }\n      }, \"Please write down your backup phrase to secure your wallet.\"), __jsx(\"p\", {\n        style: {\n          marginTop: 0,\n          color: \"#0e314c\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }\n      }, \"rent all smooth flame increase ketchup catalog moon room wasp twice media\"));\n    } else if (props.dialogType === \"update-username\") {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 19\n        }\n      }, \"UserName\"), __jsx(\"input\", {\n        onChange: function onChange(e) {\n          setuserNameField(e.target.value);\n        },\n        type: \"text\",\n        className: \"form-control\",\n        defaultValue: \"\",\n        placeholder: \"Enter your Display Name\",\n        required: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 19\n        }\n      })));\n    } else if (props.dialogType === \"update-email\") {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 19\n        }\n      }, \"New Email\"), __jsx(\"input\", {\n        onChange: function onChange(e) {\n          setemailField(e.target.value);\n        },\n        type: \"email\",\n        className: \"form-control\",\n        defaultValue: \"\",\n        placeholder: \"Enter your New Email Address\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 19\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 19\n        }\n      }, \"Current Password\"), __jsx(\"input\", {\n        onChange: function onChange(e) {\n          setucurrentPasswordField(e.target.value);\n        },\n        type: \"password\",\n        className: \"form-control\",\n        defaultValue: \"\",\n        placeholder: \"Enter your Password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 19\n        }\n      })));\n    } else if (props.dialogType === \"update-password\") {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 19\n        }\n      }, \"Current Password\"), __jsx(\"input\", {\n        onChange: function onChange(e) {\n          setucurrentPasswordField(e.target.value);\n        },\n        type: \"password\",\n        className: \"form-control\",\n        defaultValue: \"\",\n        placeholder: \"Enter your Current Password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 19\n        }\n      })), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 19\n        }\n      }, \"New Password\"), __jsx(\"input\", {\n        onChange: function onChange(e) {\n          setunewPasswordField(e.target.value);\n        },\n        type: \"password\",\n        className: \"form-control\",\n        defaultValue: \"\",\n        placeholder: \"Enter your New Password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 19\n        }\n      })));\n    } else if (props.dialogType === \"update-account\") {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 17\n        }\n      }, __jsx(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 19\n        }\n      }, \"Current Password\"), __jsx(\"input\", {\n        onChange: function onChange(e) {\n          setucurrentPasswordField(e.target.value);\n        },\n        type: \"password\",\n        className: \"form-control\",\n        defaultValue: \"\",\n        placeholder: \"Enter your Current Password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 19\n        }\n      })));\n    } else if (props.dialogType === \"update-image\") {\n      return __jsx(UpdateImagePortrait, {\n        photoUrl: props.photoUrl,\n        imageFile: imageFile,\n        setimageFile: setimageFile,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 20\n        }\n      });\n    } else if (props.dialogType === \"withdraw\") {\n      return __jsx(WithdrawComponent, {\n        handleClose: handleClose,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 20\n        }\n      });\n    }\n  }()), props.dialogType !== \"withdraw\" && __jsx(DialogActions, {\n    style: {\n      marginTop: 10,\n      height: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }, function () {\n    if (loading) {\n      return __jsx(\"div\", {\n        style: {\n          width: 80\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 17\n        }\n      }, __jsx(CustomLoader, {\n        width: 25,\n        height: 25,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 19\n        }\n      }));\n    } else {\n      if (props.dialogType === \"export\") {\n        return __jsx(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-small\",\n          onClick: handleClose,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 19\n          }\n        }, \"Close\");\n      } else {\n        return __jsx(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-small\",\n          onClick: function onClick() {\n            if (props.dialogType === \"update-username\") {\n              updateUsername();\n            } else if (props.dialogType === \"update-email\") {\n              updateUserEmail();\n            } else if (props.dialogType === \"update-password\") {\n              updateUserPassword();\n            } else if (props.dialogType === \"update-account\") {\n              updateUserAccount();\n            } else if (props.dialogType === \"update-image\") {\n              updateUserPhoto();\n            }\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 19\n          }\n        }, \"Update\");\n      }\n    }\n  }()), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(DynamicDialog, \"lkdQXW5D7WEhTTyTH/48R79bwnw=\", false, function () {\n  return [useDispatch, useRouter];\n});\n\n_c3 = DynamicDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"DynamicDialog\");","map":{"version":3,"sources":["/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/profile/DynamicDialog.js"],"names":["React","useState","useRef","Dialog","DialogActions","DialogContent","Slide","firebase","CustomLoader","ToastContainer","toast","useRouter","updateUserDataAction","UpdateImagePortrait","useDispatch","useSelector","WithdrawComponent","Transition","forwardRef","props","ref","DynamicDialog","userNameField","setuserNameField","loading","setloading","emailField","setemailField","ucurrentPasswordField","setucurrentPasswordField","unewPasswordField","setunewPasswordField","imageFile","setimageFile","dispatch","router","handleClose","setdialogState","validateEmail","email","re","test","String","toLowerCase","updateUsername","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","updateUser","auth","currentUser","updateProfile","displayName","then","success","message","updateUserEmail","pass","signInWithEmailAndPassword","userEmail","user","updateEmail","updateUserPassword","updatePassword","updateUserAccount","push","updateUserPhoto","storage","modefiedURL","uid","child","put","originFileObj","setprofileImg","currentuser","photoURL","dialogState","zIndex","padding","dialogType","marginBottom","marginTop","color","e","target","value","photoUrl","height","width"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Slide from \"@material-ui/core/Slide\";\nimport firebase from \"../../config/fire-conf\";\nimport CustomLoader from \"../Layouts/CustomLoader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useRouter } from \"next/router\";\nimport { updateUserDataAction } from \"../../store/actions/actiosMain\";\nimport UpdateImagePortrait from \"./UpdateImagePortrait\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport WithdrawComponent from \"./WithdrawComponent\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function DynamicDialog(props) {\n  const [userNameField, setuserNameField] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [emailField, setemailField] = useState(\"\");\n  const [ucurrentPasswordField, setucurrentPasswordField] = useState(\"\");\n  const [unewPasswordField, setunewPasswordField] = useState(\"\");\n\n  const [imageFile, setimageFile] = useState([]);\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const handleClose = () => {\n    props.setdialogState(false);\n  };\n\n  const validateEmail = (email) => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const updateUsername = () => {\n    setloading(true);\n    if (userNameField === \"\") {\n      toast.error(\"Please provide a Username\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      setloading(false);\n    } else {\n      var updateUser = firebase.auth().currentUser;\n      updateUser\n        .updateProfile({\n          displayName: userNameField,\n        })\n        .then(() => {\n          toast.success(\"Username updated Successfully\", {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          setloading(false);\n          handleClose();\n          setuserNameField(\"\");\n        })\n        .catch(function(error) {\n          toast.error(error.message, {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          setloading(false);\n        });\n    }\n  };\n\n  const updateUserEmail = () => {\n    setloading(true);\n    let pass = true;\n\n    if (!validateEmail(emailField)) {\n      toast.error(\"Please provide a valid Email Address\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      pass = false;\n    }\n    if (ucurrentPasswordField === \"\") {\n      toast.error(\"Please provide your current Password\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      pass = false;\n    }\n\n    if (!pass) {\n      setloading(false);\n    } else {\n      //signning the user\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(props.userEmail, ucurrentPasswordField)\n        .then(() => {\n          //updating email\n          var user = firebase.auth().currentUser;\n          return user.updateEmail(emailField);\n        })\n        .then(() => {\n          // Update successful.\n          toast.success(\"User Email Updated Successfully\", {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          setloading(false);\n          handleClose();\n          setemailField(\"\");\n          setucurrentPasswordField(\"\");\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          setloading(false);\n        });\n    }\n  };\n\n  const updateUserPassword = () => {\n    setloading(true);\n    let pass = true;\n\n    if (unewPasswordField === \"\") {\n      toast.error(\"Please provide your new Password\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      pass = false;\n    }\n    if (ucurrentPasswordField === \"\") {\n      toast.error(\"Please provide your current Password\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      pass = false;\n    }\n\n    if (!pass) {\n      setloading(false);\n    } else {\n      //signning the user\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(props.userEmail, ucurrentPasswordField)\n        .then(() => {\n          //updating email\n          var user = firebase.auth().currentUser;\n          return user.updatePassword(unewPasswordField);\n        })\n        .then(() => {\n          // Update successful.\n          toast.success(\"User Password Updated Successfully\", {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          setloading(false);\n          handleClose();\n          setunewPasswordField(\"\");\n          setucurrentPasswordField(\"\");\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          setloading(false);\n        });\n    }\n  };\n\n  const updateUserAccount = () => {\n    setloading(true);\n    let pass = true;\n\n    if (ucurrentPasswordField === \"\") {\n      toast.error(\"Please provide your current Password\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n      pass = false;\n    }\n\n    if (!pass) {\n      setloading(false);\n    } else {\n      //signning the user\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(props.userEmail, ucurrentPasswordField)\n        .then(() => {\n          //updating email\n          var user = firebase.auth().currentUser;\n          return user.delete();\n        })\n        .then(() => {\n          // Update successful.\n          toast.success(\"User Account Deleted Successfully\", {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          setloading(false);\n          handleClose();\n          setucurrentPasswordField(\"\");\n          dispatch(updateUserDataAction(null));\n          router.push(\"/\");\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n          setloading(false);\n        });\n    }\n  };\n\n  const updateUserPhoto = async () => {\n    setloading(true);\n    let pass = true;\n    if (imageFile[0]) {\n      //pushing image to DB\n      let storage = firebase.storage();\n      let modefiedURL = `https://firebasestorage.googleapis.com/v0/b/vaionexdev.appspot.com/o/profile_images%2F${props.uid}?alt=media`;\n\n      await storage\n        .ref()\n        .child(`profile_images/${props.uid}`)\n        .put(imageFile[0].originFileObj);\n\n      props.setprofileImg(modefiedURL);\n\n      let currentuser = firebase.auth().currentUser;\n      currentuser\n        .updateProfile({\n          photoURL: modefiedURL,\n        })\n        .then(function() {\n          setloading(false);\n          handleClose();\n\n          toast.success(\"Image Uploaded Succesfully\", {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n        })\n        .catch((error) => {\n          setloading(false);\n          toast.error(\"Error Occured!\", {\n            position: \"bottom-left\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n        });\n    } else {\n      setloading(false);\n      toast.error(\"Please provide Profile Image\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    }\n  };\n\n  return (\n    <Dialog\n      open={props.dialogState}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      fullWidth\n      style={{ zIndex: 100 }}\n      maxWidth=\"sm\"\n    >\n      <h5 style={{ padding: \"18px 24px 5px 24px\" }}>\n        {(() => {\n          if (props.dialogType === \"export\") {\n            return \"Backup Your Wallet\";\n          } else if (props.dialogType === \"update-username\") {\n            return \"Update UserName\";\n          } else if (props.dialogType === \"update-email\") {\n            return \"Update Email\";\n          } else if (props.dialogType === \"update-password\") {\n            return \"Update Password\";\n          } else if (props.dialogType === \"update-account\") {\n            return \"Delete Account\";\n          } else if (props.dialogType === \"update-image\") {\n            return \"Add an account photo\";\n          } else if (props.dialogType === \"withdraw\") {\n            return \"Withdraw Amount\";\n          }\n        })()}\n      </h5>\n      <DialogContent>\n        {(() => {\n          if (props.dialogType === \"export\") {\n            return (\n              <>\n                <p style={{ marginBottom: \"0.2rem\" }}>Please write down your backup phrase to secure your wallet.</p>\n                <p style={{ marginTop: 0, color: \"#0e314c\" }}>rent all smooth flame increase ketchup catalog moon room wasp twice media</p>\n              </>\n            );\n          } else if (props.dialogType === \"update-username\") {\n            return (\n              <>\n                <div className=\"form-group\">\n                  <label>UserName</label>\n                  <input\n                    onChange={(e) => {\n                      setuserNameField(e.target.value);\n                    }}\n                    type=\"text\"\n                    className=\"form-control\"\n                    defaultValue=\"\"\n                    placeholder=\"Enter your Display Name\"\n                    required\n                  />\n                </div>\n              </>\n            );\n          } else if (props.dialogType === \"update-email\") {\n            return (\n              <>\n                <div className=\"form-group\">\n                  <label>New Email</label>\n                  <input\n                    onChange={(e) => {\n                      setemailField(e.target.value);\n                    }}\n                    type=\"email\"\n                    className=\"form-control\"\n                    defaultValue=\"\"\n                    placeholder=\"Enter your New Email Address\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Current Password</label>\n                  <input\n                    onChange={(e) => {\n                      setucurrentPasswordField(e.target.value);\n                    }}\n                    type=\"password\"\n                    className=\"form-control\"\n                    defaultValue=\"\"\n                    placeholder=\"Enter your Password\"\n                  />\n                </div>\n              </>\n            );\n          } else if (props.dialogType === \"update-password\") {\n            return (\n              <>\n                <div className=\"form-group\">\n                  <label>Current Password</label>\n                  <input\n                    onChange={(e) => {\n                      setucurrentPasswordField(e.target.value);\n                    }}\n                    type=\"password\"\n                    className=\"form-control\"\n                    defaultValue=\"\"\n                    placeholder=\"Enter your Current Password\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>New Password</label>\n                  <input\n                    onChange={(e) => {\n                      setunewPasswordField(e.target.value);\n                    }}\n                    type=\"password\"\n                    className=\"form-control\"\n                    defaultValue=\"\"\n                    placeholder=\"Enter your New Password\"\n                  />\n                </div>\n              </>\n            );\n          } else if (props.dialogType === \"update-account\") {\n            return (\n              <>\n                <div className=\"form-group\">\n                  <label>Current Password</label>\n                  <input\n                    onChange={(e) => {\n                      setucurrentPasswordField(e.target.value);\n                    }}\n                    type=\"password\"\n                    className=\"form-control\"\n                    defaultValue=\"\"\n                    placeholder=\"Enter your Current Password\"\n                  />\n                </div>\n              </>\n            );\n          } else if (props.dialogType === \"update-image\") {\n            return <UpdateImagePortrait photoUrl={props.photoUrl} imageFile={imageFile} setimageFile={setimageFile} />;\n          } else if (props.dialogType === \"withdraw\") {\n            return <WithdrawComponent handleClose={handleClose} />;\n          }\n        })()}\n      </DialogContent>\n      {props.dialogType !== \"withdraw\" && (\n        <DialogActions style={{ marginTop: 10, height: 50 }}>\n          {(() => {\n            if (loading) {\n              return (\n                <div style={{ width: 80 }}>\n                  <CustomLoader width={25} height={25} />\n                </div>\n              );\n            } else {\n              if (props.dialogType === \"export\") {\n                return (\n                  <button type=\"button\" className=\"btn btn-primary btn-small\" onClick={handleClose}>\n                    Close\n                  </button>\n                );\n              } else {\n                return (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary btn-small\"\n                    onClick={() => {\n                      if (props.dialogType === \"update-username\") {\n                        updateUsername();\n                      } else if (props.dialogType === \"update-email\") {\n                        updateUserEmail();\n                      } else if (props.dialogType === \"update-password\") {\n                        updateUserPassword();\n                      } else if (props.dialogType === \"update-account\") {\n                        updateUserAccount();\n                      } else if (props.dialogType === \"update-image\") {\n                        updateUserPhoto();\n                      }\n                    }}\n                  >\n                    Update\n                  </button>\n                );\n              }\n            }\n          })()}\n        </DialogActions>\n      )}\n      <ToastContainer />\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
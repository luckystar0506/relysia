{"ast":null,"code":"var _jsxFileName = \"/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/settings/General.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport firebase from \"../../config/fire-conf\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport * as Icon from \"react-feather\";\nimport Popper from \"@material-ui/core/Popper\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport { Popconfirm } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\nconst useStyles = makeStyles(theme => ({}));\n\nfunction GeneralSettings(props) {\n  const router = useRouter();\n  const classes = useStyles();\n  const {\n    0: selectedWallet,\n    1: setselectedWallet\n  } = useState(0);\n  const {\n    0: anchorElWalletName,\n    1: setAnchorElWalletName\n  } = useState(null);\n  const {\n    0: anchorElWalletDetails,\n    1: setAnchorElWalletDetails\n  } = useState(null);\n  const {\n    0: walletNameField,\n    1: setwalletNameField\n  } = useState(\"\");\n  const {\n    0: walletDetailsField,\n    1: setwalletDetailsField\n  } = useState(\"\");\n\n  const handleClickWalletNamePopup = event => {\n    setAnchorElWalletName(anchorElWalletName ? null : event.currentTarget);\n  };\n\n  const updateWalletName = async () => {\n    if (walletNameField !== \"\") {\n      let modefiedObj = _objectSpread({}, props.walletsData);\n\n      modefiedObj[props.walletListArray[selectedWallet].id].title = walletNameField;\n      props.setwalletsData(modefiedObj); //updating data in firebase\n\n      let updates = {};\n      updates[\"userWallets/\" + props.userDataRedux.uid + \"/\" + props.walletListArray[selectedWallet].id + \"/title\"] = walletNameField;\n      firebase.database().ref().update(updates);\n      setTimeout(() => {\n        toast.success(\"Wallet name updated Successfully\", {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n      }, 1000);\n      handleClickWalletNamePopup();\n    } else {\n      toast.error(\"Please provide wallet name!\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }\n  };\n\n  const confirmDelete = () => {\n    let modefiedObj = _objectSpread({}, props.walletsData);\n\n    delete modefiedObj[props.walletListArray[selectedWallet].id];\n    props.setwalletsData(modefiedObj); //updating data in firebase\n    // let updates = {};\n    // updates[\n    //   \"userWallets/\" +\n    //     props.userDataRedux.uid +\n    //     \"/\" +\n    //     props.walletListArray[selectedWallet].id +\n    //     \"/title\"\n    // ] = walletNameField;\n    // firebase.database().ref().update(updates);\n\n    setTimeout(() => {\n      toast.success(\"Wallet deleted Successfully\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }, 1000);\n  };\n\n  const openDbNamePopup = Boolean(anchorElWalletName);\n  const idWalletNamePopup = openDbNamePopup ? \"db-name-popper\" : undefined;\n  const openDbDetailsPopup = Boolean(anchorElWalletDetails);\n  const idWalletDetailsPopup = openDbDetailsPopup ? \"db-details-popper\" : undefined;\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"blog-details-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"col-lg-12 col-md-12\",\n    style: {\n      margin: \"0px auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"blog-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"article-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Your Wallets\"), props.walletListArray && props.walletListArray.length > 0 ? __jsx(\"div\", {\n    className: \"generalSet-con-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"generalSet-con1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, props.walletListArray.map((ele, index) => {\n    return __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      className: selectedWallet === index ? \"single-box2 bg-eb6b3d dbselecednav\" : \"single-box2 bg-eb6b3d \",\n      key: ele.id + \"nav\",\n      onClick: () => setselectedWallet(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 27\n      }\n    }, __jsx(\"div\", {\n      className: \"icon\",\n      style: {\n        cursor: \"pointer\",\n        marginRight: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, __jsx(Icon.Server, {\n      style: {\n        height: 18,\n        width: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 31\n      }\n    })), __jsx(\"div\", {\n      className: \"sett-gen-nav-nam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, __jsx(\"p\", {\n      className: \"nav-set-head\",\n      style: {\n        color: \"#0a0f12\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 31\n      }\n    }, ele.title), __jsx(\"p\", {\n      style: {\n        fontSize: 11,\n        position: \"relative\",\n        top: -4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 31\n      }\n    }, \"database\")));\n  })), __jsx(\"div\", {\n    className: \"generalSet-con2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginTop: 0\n    },\n    className: \"general-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, __jsx(\"h6\", {\n    style: {\n      marginTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, \"Wallet Name\", __jsx(IconButton, {\n    size: \"small\",\n    style: {\n      position: \"absolute\",\n      marginTop: -4,\n      marginLeft: 6\n    },\n    \"aria-describedby\": idWalletNamePopup,\n    onClick: e => {\n      setwalletNameField(props.walletListArray[selectedWallet] && props.walletListArray[selectedWallet].title ? props.walletListArray[selectedWallet].title : \"\");\n      handleClickWalletNamePopup(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 27\n    }\n  }, __jsx(EditIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, props.walletListArray[selectedWallet] && props.walletListArray[selectedWallet].title ? props.walletListArray[selectedWallet].title : \"-\"), __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, \"Mnemonic Phrase\", \" \", __jsx(\"span\", {\n    className: \"helper-test-settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 27\n    }\n  }, \"(Please Keep backup of this to secure your wallet.)\", \" \")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, props.walletListArray[selectedWallet] && props.walletListArray[selectedWallet].mnemonic ? props.walletListArray[selectedWallet].mnemonic : \"-\"), __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"Remove this wallet\"), __jsx(Popconfirm, {\n    placement: \"top\",\n    title: __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, \"Are you sure to delete this Wallet?\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 31\n      }\n    }), \" You will not be able to acess wallet keys anymore!\"),\n    onConfirm: () => confirmDelete(),\n    okText: \"Yes\",\n    cancelText: \"No\",\n    icon: __jsx(QuestionCircleOutlined, {\n      style: {\n        color: \"#B33A3A\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    style: {\n      color: \"#B33A3A\"\n    },\n    startIcon: __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 40\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 27\n    }\n  }, \"Delete\"))))) : __jsx(\"div\", {\n    className: \"generalSet-con-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, \"You didn't have any apps yet \")))))), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  })), __jsx(Popper, {\n    id: idWalletNamePopup,\n    open: openDbNamePopup,\n    anchorEl: anchorElWalletName,\n    placement: \"bottom\",\n    disablePortal: false,\n    modifiers: {\n      flip: {\n        enabled: true\n      },\n      preventOverflow: {\n        enabled: true,\n        boundariesElement: \"scrollParent\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, __jsx(Paper, {\n    className: \"poper-dbname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    className: \"popHeadMain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, \"Update App Name\"), __jsx(\"div\", {\n    className: \"form-group\",\n    style: {\n      margin: \"20px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"DB Name\",\n    className: \"form-control\",\n    required: true,\n    \"data-error\": \"Please enter your DB Name\",\n    placeholder: \"DB Name\",\n    style: {\n      height: 40\n    },\n    value: walletNameField,\n    onChange: e => {\n      setwalletNameField(e.target.value);\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"normal-button\",\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      marginLeft: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    style: {\n      marginRight: 10\n    },\n    onClick: handleClickWalletNamePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, \"Cancel\"), __jsx(\"button\", {\n    onClick: updateWalletName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"Update\"))))));\n}\n\nexport default GeneralSettings;","map":{"version":3,"sources":["/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/settings/General.js"],"names":["React","useState","useRouter","Paper","makeStyles","firebase","IconButton","EditIcon","ToastContainer","toast","Icon","Popper","DeleteIcon","Button","Popconfirm","QuestionCircleOutlined","useStyles","theme","GeneralSettings","props","router","classes","selectedWallet","setselectedWallet","anchorElWalletName","setAnchorElWalletName","anchorElWalletDetails","setAnchorElWalletDetails","walletNameField","setwalletNameField","walletDetailsField","setwalletDetailsField","handleClickWalletNamePopup","event","currentTarget","updateWalletName","modefiedObj","walletsData","walletListArray","id","title","setwalletsData","updates","userDataRedux","uid","database","ref","update","setTimeout","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","error","confirmDelete","openDbNamePopup","Boolean","idWalletNamePopup","undefined","openDbDetailsPopup","idWalletDetailsPopup","margin","length","map","ele","index","display","alignItems","cursor","marginRight","height","width","color","fontSize","top","marginTop","marginLeft","e","mnemonic","flip","enabled","preventOverflow","boundariesElement","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport firebase from \"../../config/fire-conf\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport * as Icon from \"react-feather\";\nimport Popper from \"@material-ui/core/Popper\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport { Popconfirm } from \"antd\";\nimport { QuestionCircleOutlined } from \"@ant-design/icons\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction GeneralSettings(props) {\n  const router = useRouter();\n  const classes = useStyles();\n\n  const [selectedWallet, setselectedWallet] = useState(0);\n  const [anchorElWalletName, setAnchorElWalletName] = useState(null);\n  const [anchorElWalletDetails, setAnchorElWalletDetails] = useState(null);\n  const [walletNameField, setwalletNameField] = useState(\"\");\n  const [walletDetailsField, setwalletDetailsField] = useState(\"\");\n\n  const handleClickWalletNamePopup = (event) => {\n    setAnchorElWalletName(anchorElWalletName ? null : event.currentTarget);\n  };\n\n  const updateWalletName = async () => {\n    if (walletNameField !== \"\") {\n      let modefiedObj = { ...props.walletsData };\n      modefiedObj[\n        props.walletListArray[selectedWallet].id\n      ].title = walletNameField;\n      props.setwalletsData(modefiedObj);\n\n      //updating data in firebase\n      let updates = {};\n      updates[\n        \"userWallets/\" +\n          props.userDataRedux.uid +\n          \"/\" +\n          props.walletListArray[selectedWallet].id +\n          \"/title\"\n      ] = walletNameField;\n      firebase.database().ref().update(updates);\n\n      setTimeout(() => {\n        toast.success(\"Wallet name updated Successfully\", {\n          position: \"bottom-left\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n        });\n      }, 1000);\n      handleClickWalletNamePopup();\n    } else {\n      toast.error(\"Please provide wallet name!\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    }\n  };\n\n  const confirmDelete = () => {\n    let modefiedObj = { ...props.walletsData };\n    delete modefiedObj[props.walletListArray[selectedWallet].id];\n    props.setwalletsData(modefiedObj);\n\n    //updating data in firebase\n    // let updates = {};\n    // updates[\n    //   \"userWallets/\" +\n    //     props.userDataRedux.uid +\n    //     \"/\" +\n    //     props.walletListArray[selectedWallet].id +\n    //     \"/title\"\n    // ] = walletNameField;\n    // firebase.database().ref().update(updates);\n\n    setTimeout(() => {\n      toast.success(\"Wallet deleted Successfully\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    }, 1000);\n  };\n\n  const openDbNamePopup = Boolean(anchorElWalletName);\n  const idWalletNamePopup = openDbNamePopup ? \"db-name-popper\" : undefined;\n  const openDbDetailsPopup = Boolean(anchorElWalletDetails);\n  const idWalletDetailsPopup = openDbDetailsPopup\n    ? \"db-details-popper\"\n    : undefined;\n  return (\n    <>\n      <section className=\"blog-details-area\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12\" style={{ margin: \"0px auto\" }}>\n            <div className=\"blog-details\">\n              <div className=\"article-content\">\n                <h5>Your Wallets</h5>\n\n                {props.walletListArray && props.walletListArray.length > 0 ? (\n                  <div className=\"generalSet-con-main\">\n                    <div className=\"generalSet-con1\">\n                      {props.walletListArray.map((ele, index) => {\n                        return (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                            }}\n                            className={\n                              selectedWallet === index\n                                ? \"single-box2 bg-eb6b3d dbselecednav\"\n                                : \"single-box2 bg-eb6b3d \"\n                            }\n                            key={ele.id + \"nav\"}\n                            onClick={() => setselectedWallet(index)}\n                          >\n                            <div\n                              className=\"icon\"\n                              style={{ cursor: \"pointer\", marginRight: 12 }}\n                            >\n                              <Icon.Server style={{ height: 18, width: 18 }} />\n                            </div>\n                            <div className=\"sett-gen-nav-nam\">\n                              <p\n                                className=\"nav-set-head\"\n                                style={{ color: \"#0a0f12\" }}\n                              >\n                                {ele.title}\n                              </p>\n                              <p\n                                style={{\n                                  fontSize: 11,\n                                  position: \"relative\",\n                                  top: -4,\n                                }}\n                              >\n                                database\n                              </p>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                    <div className=\"generalSet-con2\">\n                      <div\n                        style={{ marginTop: 0 }}\n                        className=\"general-settings\"\n                      >\n                        <h6 style={{ marginTop: 0 }}>\n                          Wallet Name\n                          <IconButton\n                            size=\"small\"\n                            style={{\n                              position: \"absolute\",\n                              marginTop: -4,\n                              marginLeft: 6,\n                            }}\n                            aria-describedby={idWalletNamePopup}\n                            onClick={(e) => {\n                              setwalletNameField(\n                                props.walletListArray[selectedWallet] &&\n                                  props.walletListArray[selectedWallet].title\n                                  ? props.walletListArray[selectedWallet].title\n                                  : \"\"\n                              );\n                              handleClickWalletNamePopup(e);\n                            }}\n                          >\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                        </h6>\n                        <p>\n                          {props.walletListArray[selectedWallet] &&\n                          props.walletListArray[selectedWallet].title\n                            ? props.walletListArray[selectedWallet].title\n                            : \"-\"}\n                        </p>\n\n                        <h6>\n                          Mnemonic Phrase{\" \"}\n                          <span className=\"helper-test-settings\">\n                            (Please Keep backup of this to secure your wallet.){\" \"}\n                          </span>\n                        </h6>\n                        <p>\n                          {props.walletListArray[selectedWallet] &&\n                          props.walletListArray[selectedWallet].mnemonic\n                            ? props.walletListArray[selectedWallet].mnemonic\n                            : \"-\"}\n                        </p>\n\n                        <h6>Remove this wallet</h6>\n                        <Popconfirm\n                          placement=\"top\"\n                          title={\n                            <div>\n                              Are you sure to delete this Wallet?\n                              <br /> You will not be able to acess wallet keys\n                              anymore!\n                            </div>\n                          }\n                          onConfirm={() => confirmDelete()}\n                          okText=\"Yes\"\n                          cancelText=\"No\"\n                          icon={\n                            <QuestionCircleOutlined\n                              style={{ color: \"#B33A3A\" }}\n                            />\n                          }\n                        >\n                          <Button\n                            style={{\n                              color: \"#B33A3A\",\n                            }}\n                            startIcon={<DeleteIcon />}\n                          >\n                            Delete\n                          </Button>\n                        </Popconfirm>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"generalSet-con-main\">\n                    <p>You didn't have any apps yet </p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <ToastContainer />\n      </section>\n      <Popper\n        id={idWalletNamePopup}\n        open={openDbNamePopup}\n        anchorEl={anchorElWalletName}\n        placement=\"bottom\"\n        disablePortal={false}\n        modifiers={{\n          flip: {\n            enabled: true,\n          },\n          preventOverflow: {\n            enabled: true,\n            boundariesElement: \"scrollParent\",\n          },\n        }}\n      >\n        <Paper className=\"poper-dbname\">\n          <h6 className=\"popHeadMain\">Update App Name</h6>\n          <div className=\"form-group\" style={{ margin: \"20px 0px\" }}>\n            <input\n              type=\"text\"\n              name=\"DB Name\"\n              className=\"form-control\"\n              required\n              data-error=\"Please enter your DB Name\"\n              placeholder=\"DB Name\"\n              style={{ height: 40 }}\n              value={walletNameField}\n              onChange={(e) => {\n                setwalletNameField(e.target.value);\n              }}\n              autoFocus\n            />\n          </div>\n          <div className=\"normal-button\" style={{ display: \"flex\" }}>\n            <div style={{ marginLeft: \"auto\" }}>\n              <button\n                style={{ marginRight: 10 }}\n                onClick={handleClickWalletNamePopup}\n              >\n                Cancel\n              </button>\n\n              <button onClick={updateWalletName}>Update</button>\n            </div>\n          </div>\n        </Paper>\n      </Popper>\n    </>\n  );\n}\n\nexport default GeneralSettings;\n"]},"metadata":{},"sourceType":"module"}
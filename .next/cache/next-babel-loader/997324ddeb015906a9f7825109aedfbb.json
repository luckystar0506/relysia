{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/profile/UpdateImagePortrait.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport ImgCrop from \"antd-img-crop\";\nimport { Upload } from \"antd\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport * as Icon from \"react-feather\";\n\nfunction UpdateImagePortrait(props) {\n  var dummyRequest = function dummyRequest(_ref) {\n    var file = _ref.file,\n        onSuccess = _ref.onSuccess;\n    setTimeout(function () {\n      onSuccess(\"ok\");\n    }, 0);\n  };\n\n  var onPreview = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n      var src, image, imgWindow;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              src = file.url;\n\n              if (src) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                var reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n\n                reader.onload = function () {\n                  return resolve(reader.result);\n                };\n              });\n\n            case 4:\n              src = _context.sent;\n\n            case 5:\n              image = new Image();\n              image.src = src;\n              imgWindow = window.open(src);\n              imgWindow.document.write(image.outerHTML);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onPreview(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChangeImage = function onChangeImage(_ref3) {\n    var newFileList = _ref3.fileList;\n\n    if (newFileList[0] && newFileList[0].size > 625000) {\n      toast.error(\"Image must smaller than 5MB!\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    } else {\n      props.setimageFile(newFileList);\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(ImgCrop, {\n    rotate: true,\n    aspect: 1 / 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Upload, {\n    customRequest: dummyRequest,\n    listType: \"picture-card\",\n    fileList: props.imageFile,\n    onChange: onChangeImage,\n    onPreview: onPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, props.imageFile.length < 1 && __jsx(React.Fragment, null, props.photoUrl ? __jsx(\"img\", {\n    style: {\n      height: \"auto\",\n      width: \"inherit\"\n    },\n    src: props.photoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }) : __jsx(Icon.Plus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 109\n    }\n  })))));\n}\n\n_c = UpdateImagePortrait;\nexport default UpdateImagePortrait;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateImagePortrait\");","map":{"version":3,"sources":["/home/mshahzaib/Desktop/upworkRobinKohzeProject/walletProject/wallet/components/profile/UpdateImagePortrait.js"],"names":["React","useState","ImgCrop","Upload","ToastContainer","toast","Icon","UpdateImagePortrait","props","dummyRequest","file","onSuccess","setTimeout","onPreview","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","onChangeImage","newFileList","fileList","size","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","setimageFile","imageFile","length","photoUrl","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ImgCrop from \"antd-img-crop\";\nimport { Upload } from \"antd\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport * as Icon from \"react-feather\";\n\nfunction UpdateImagePortrait(props) {\n  const dummyRequest = ({ file, onSuccess }) => {\n    setTimeout(() => {\n      onSuccess(\"ok\");\n    }, 0);\n  };\n\n  const onPreview = async (file) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const onChangeImage = ({ fileList: newFileList }) => {\n    if (newFileList[0] && newFileList[0].size > 625000) {\n      toast.error(\"Image must smaller than 5MB!\", {\n        position: \"bottom-left\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    } else {\n      props.setimageFile(newFileList);\n    }\n  };\n\n  return (\n    <div>\n      <ToastContainer />\n      <ImgCrop rotate aspect={1 / 1}>\n        <Upload\n          customRequest={dummyRequest}\n          listType=\"picture-card\"\n          fileList={props.imageFile}\n          onChange={onChangeImage}\n          onPreview={onPreview}\n        >\n          {props.imageFile.length < 1 && (\n            <>{props.photoUrl ? <img style={{ height: \"auto\", width: \"inherit\" }} src={props.photoUrl} /> : <Icon.Plus />}</>\n          )}\n        </Upload>\n      </ImgCrop>\n    </div>\n  );\n}\n\nexport default UpdateImagePortrait;\n"]},"metadata":{},"sourceType":"module"}